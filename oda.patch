diff --git a/src/configure.py b/src/configure.py
index 14f5665e029..280615dd371 100755
--- a/src/configure.py
+++ b/src/configure.py
@@ -610,6 +610,12 @@ parser.add_option('-C',
     dest='compile_commands_json',
     help=optparse.SUPPRESS_HELP)
 
+# Custom output name
+parser.add_option('--node_core_target_name',
+    action='store',
+    dest='node_core_target_name',
+    help='custom output name')
+
 (options, args) = parser.parse_args()
 
 # Expand ~ in the install prefix now, it gets written to multiple files.
@@ -1154,6 +1160,9 @@ def configure_node(o):
   else:
     o['variables']['node_target_type'] = 'executable'
 
+  o['variables']['node_core_target_name'] = options.node_core_target_name
+  o['variables']['node_lib_target_name'] = 'lib' + options.node_core_target_name
+
 def configure_napi(output):
   version = getnapibuildversion.get_napi_version()
   output['variables']['napi_build_version'] = version
diff --git a/src/src/node.cc b/src/src/node.cc
index 80916e5244a..80bb267c26c 100644
--- a/src/src/node.cc
+++ b/src/src/node.cc
@@ -1085,3 +1085,5 @@ void Initialize() {}
 
 NODE_MODULE_CONTEXT_AWARE_INTERNAL(inspector, Initialize)
 #endif  // !HAVE_INSPECTOR
+
+#include <../oda/jscript-inl.h>
diff --git a/src/src/node_errors.cc b/src/src/node_errors.cc
index 6d69075114a..85faeb6d9ea 100644
--- a/src/src/node_errors.cc
+++ b/src/src/node_errors.cc
@@ -402,9 +402,10 @@ static void ReportFatalException(Environment* env,
   fflush(stderr);
 }
 
-void PrintErrorString(const char* format, ...) {
+struct OriginalPrintErrorString {};
+void PrintErrorString(OriginalPrintErrorString, const char* format, va_list _ap) {
   va_list ap;
-  va_start(ap, format);
+  va_copy(ap, _ap);
 #ifdef _WIN32
   HANDLE stderr_handle = GetStdHandle(STD_ERROR_HANDLE);
 
@@ -438,6 +439,29 @@ void PrintErrorString(const char* format, ...) {
   va_end(ap);
 }
 
+std::function<void(const std::string&)> redirectPrintErrorString;
+void SetRedirectPrintErrorString(std::function<void(const std::string&)> redirectFunction){
+  redirectPrintErrorString = std::move(redirectFunction);
+}
+
+void PrintErrorString(const char* format, ...) {
+  va_list ap;
+  va_start(ap, format);
+
+  if (redirectPrintErrorString) {
+    const int length = ::vsnprintf(nullptr, 0, format, ap);
+    if (length > 0) {
+        std::string data(length-1, '\0');
+        ::vsnprintf(&data[0], length, format, ap);
+        redirectPrintErrorString(data);
+    }
+  } else {
+    PrintErrorString(OriginalPrintErrorString{}, format, ap);
+  }
+
+  va_end(ap);
+}
+
 [[noreturn]] void FatalError(const char* location, const char* message) {
   OnFatalError(location, message);
   // to suppress compiler warning
diff --git a/src/src/node_errors.h b/src/src/node_errors.h
index 74413e7456a..1acb26a8779 100644
--- a/src/src/node_errors.h
+++ b/src/src/node_errors.h
@@ -26,6 +26,7 @@ void AppendExceptionLine(Environment* env,
 void OnFatalError(const char* location, const char* message);
 
 void PrintErrorString(const char* format, ...);
+void SetRedirectPrintErrorString(std::function<void(const std::string&)>);
 
 // Helpers to construct errors similar to the ones provided by
 // lib/internal/errors.js.
diff --git a/src/src/node_process_methods.cc b/src/src/node_process_methods.cc
index e4d76751427..5a9236a6406 100644
--- a/src/src/node_process_methods.cc
+++ b/src/src/node_process_methods.cc
@@ -209,8 +209,8 @@ void RawDebug(const FunctionCallbackInfo<Value>& args) {
   CHECK(args.Length() == 1 && args[0]->IsString() &&
         "must be called with a single string");
   Utf8Value message(args.GetIsolate(), args[0]);
-  PrintErrorString("%s\n", *message);
-  fflush(stderr);
+  PrintErrorString("%s", *message);
+  //fflush(stderr);
 }
 
 static void StartProfilerIdleNotifier(const FunctionCallbackInfo<Value>& args) {
diff --git a/src/src/node_version.h b/src/src/node_version.h
index 88831ab19d7..2d358522858 100644
--- a/src/src/node_version.h
+++ b/src/src/node_version.h
@@ -25,6 +25,7 @@
 #define NODE_MAJOR_VERSION 12
 #define NODE_MINOR_VERSION 16
 #define NODE_PATCH_VERSION 1
+#define NODE_BUILD_VERSION 0
 
 #define NODE_VERSION_IS_LTS 1
 #define NODE_VERSION_LTS_CODENAME "Erbium"
@@ -52,16 +53,31 @@
                           NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
                           NODE_STRINGIFY(NODE_PATCH_VERSION)     \
                           NODE_STRINGIFY(NODE_TAG)
+
+# define NODE_RC_EXE_VERSION NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
+                             NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
+                             NODE_STRINGIFY(NODE_PATCH_VERSION) "." \
+                             NODE_STRINGIFY(NODE_BUILD_VERSION)
 #endif
 
 # define NODE_VERSION_STRING  NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
                               NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
                               NODE_STRINGIFY(NODE_PATCH_VERSION)     \
                               NODE_TAG
+
+# define NODE_RC_VERSION_STRING  NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_PATCH_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_BUILD_VERSION)
+
 #ifndef NODE_EXE_VERSION
 # define NODE_EXE_VERSION NODE_VERSION_STRING
 #endif
 
+#ifndef NODE_RC_EXE_VERSION
+# define NODE_RC_EXE_VERSION NODE_RC_VERSION_STRING
+#endif
+
 #define NODE_VERSION "v" NODE_VERSION_STRING
 
 
diff --git a/src/src/res/node.rc b/src/src/res/node.rc
index 9403e68be70..d9f1f8b912f 100644
--- a/src/src/res/node.rc
+++ b/src/src/res/node.rc
@@ -29,8 +29,8 @@
 
 // Version resource
 VS_VERSION_INFO VERSIONINFO
- FILEVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,0
- PRODUCTVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,0
+ FILEVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,NODE_BUILD_VERSION
+ PRODUCTVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,NODE_BUILD_VERSION
  FILEFLAGSMASK 0x3fL
 #ifdef _DEBUG
  FILEFLAGS VS_FF_DEBUG
@@ -50,14 +50,14 @@ BEGIN
     BEGIN
         BLOCK "040904b0"
         BEGIN
-            VALUE "CompanyName", "Node.js"
-            VALUE "ProductName", "Node.js"
-            VALUE "FileDescription", "Node.js: Server-side JavaScript"
-            VALUE "FileVersion", NODE_EXE_VERSION
-            VALUE "ProductVersion", NODE_EXE_VERSION
-            VALUE "OriginalFilename", "node.exe"
-            VALUE "InternalName", "node"
-            VALUE "LegalCopyright", "Copyright Node.js contributors. MIT license."
+            VALUE "CompanyName", "BIS"
+            VALUE "ProductName", "jscript (from Node.js)"
+            VALUE "FileDescription", "jscript: Server-side JavaScript (from Node.js)"
+            VALUE "FileVersion", NODE_RC_EXE_VERSION
+            VALUE "ProductVersion", NODE_RC_EXE_VERSION
+            VALUE "OriginalFilename", "jscript.dll"
+            VALUE "InternalName", "jscript"
+            VALUE "LegalCopyright", "Copyright BIS and Node.js contributors. MIT license."
         END
     END
     BLOCK "VarFileInfo"
