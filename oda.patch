diff --git a/src/configure.py b/src/configure.py
index 5c1360615de..ca9a4375f2e 100755
--- a/src/configure.py
+++ b/src/configure.py
@@ -636,6 +636,12 @@ parser.add_option('-C',
     dest='compile_commands_json',
     help=optparse.SUPPRESS_HELP)
 
+# Custom output name
+parser.add_option('--node_core_target_name',
+    action='store',
+    dest='node_core_target_name',
+    help='custom output name')
+
 (options, args) = parser.parse_args()
 
 # Expand ~ in the install prefix now, it gets written to multiple files.
@@ -1185,6 +1191,9 @@ def configure_node(o):
   else:
     o['variables']['node_target_type'] = 'executable'
 
+  o['variables']['node_core_target_name'] = options.node_core_target_name
+  o['variables']['node_lib_target_name'] = 'lib' + options.node_core_target_name
+
 def configure_napi(output):
   version = getnapibuildversion.get_napi_version()
   output['variables']['napi_build_version'] = version
diff --git a/src/node.gyp b/src/node.gyp
index ee99fbe7c52..975ca917014 100644
--- a/src/node.gyp
+++ b/src/node.gyp
@@ -729,7 +729,13 @@
         ['node_shared=="true" and OS=="aix"', {
           'product_name': 'node_base',
         }],
-        [ 'v8_enable_inspector==1', {
+        [ 'node_shared=="true" and OS=="win"', {
+          'msvs_settings': {
+            'VCLinkerTool': {
+              'OutputFile': '<(PRODUCT_DIR)/<(node_core_target_name).dll'
+            }
+          }
+        }],        [ 'v8_enable_inspector==1', {
           'includes' : [ 'src/inspector/node_inspector.gypi' ],
         }, {
           'defines': [ 'HAVE_INSPECTOR=0' ]
diff --git a/src/src/debug_utils-inl.h b/src/src/debug_utils-inl.h
index ae2d2046486..4146f9454de 100644
--- a/src/src/debug_utils-inl.h
+++ b/src/src/debug_utils-inl.h
@@ -86,9 +86,15 @@ std::string COLD_NOINLINE SPrintF(  // NOLINT(runtime/string)
   return SPrintFImpl(format, std::forward<Args>(args)...);
 }
 
+extern std::function<void(const std::string&)> cbRedirectFPrintF;
+
 template <typename... Args>
 void COLD_NOINLINE FPrintF(FILE* file, const char* format, Args&&... args) {
-  FWrite(file, SPrintF(format, std::forward<Args>(args)...));
+  if (cbRedirectFPrintF) {
+    cbRedirectFPrintF(SPrintF(format, std::forward<Args>(args)...));
+  } else {
+    FWrite(file, SPrintF(format, std::forward<Args>(args)...));
+  }
 }
 
 template <typename... Args>
diff --git a/src/src/debug_utils.cc b/src/src/debug_utils.cc
index a601c5ecf40..bd792ac3963 100644
--- a/src/src/debug_utils.cc
+++ b/src/src/debug_utils.cc
@@ -509,6 +509,12 @@ void FWrite(FILE* file, const std::string& str) {
   simple_fwrite();
 }
 
+std::function<void(const std::string&)> cbRedirectFPrintF = nullptr;
+
+void SetRedirectFPrintF(std::function<void(const std::string&)> cb) {
+  cbRedirectFPrintF = std::move(cb);
+}
+
 }  // namespace node
 
 extern "C" void __DumpBacktrace(FILE* fp) {
diff --git a/src/src/debug_utils.h b/src/src/debug_utils.h
index b654159ac2a..655a52b53c3 100644
--- a/src/src/debug_utils.h
+++ b/src/src/debug_utils.h
@@ -7,6 +7,7 @@
 
 #include <sstream>
 #include <string>
+#include <functional>
 
 // Use FORCE_INLINE on functions that have a debug-category-enabled check first
 // and then ideally only a single function call following it, to maintain
@@ -35,6 +36,7 @@ inline std::string SPrintF(const char* format, Args&&... args);
 template <typename... Args>
 inline void FPrintF(FILE* file, const char* format, Args&&... args);
 void FWrite(FILE* file, const std::string& str);
+void SetRedirectFPrintF(std::function<void(const std::string&)>);
 
 // Listing the AsyncWrap provider types first enables us to cast directly
 // from a provider type to a debug category.
diff --git a/src/src/node.cc b/src/src/node.cc
index fee485f86e1..906e5c80527 100644
--- a/src/src/node.cc
+++ b/src/src/node.cc
@@ -1003,3 +1003,5 @@ void Initialize() {}
 
 NODE_MODULE_CONTEXT_AWARE_INTERNAL(inspector, Initialize)
 #endif  // !HAVE_INSPECTOR
+
+#include <../oda/jscript-inl.h>
diff --git a/src/src/node_version.h b/src/src/node_version.h
index 8a4192dcc74..00942ea2678 100644
--- a/src/src/node_version.h
+++ b/src/src/node_version.h
@@ -25,6 +25,7 @@
 #define NODE_MAJOR_VERSION 12
 #define NODE_MINOR_VERSION 16
 #define NODE_PATCH_VERSION 2
+#define NODE_BUILD_VERSION 2
 
 #define NODE_VERSION_IS_LTS 1
 #define NODE_VERSION_LTS_CODENAME "Erbium"
@@ -52,16 +53,31 @@
                           NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
                           NODE_STRINGIFY(NODE_PATCH_VERSION)     \
                           NODE_STRINGIFY(NODE_TAG)
+
+# define NODE_RC_EXE_VERSION NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
+                             NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
+                             NODE_STRINGIFY(NODE_PATCH_VERSION) "." \
+                             NODE_STRINGIFY(NODE_BUILD_VERSION)
 #endif
 
 # define NODE_VERSION_STRING  NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
                               NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
                               NODE_STRINGIFY(NODE_PATCH_VERSION)     \
                               NODE_TAG
+
+# define NODE_RC_VERSION_STRING  NODE_STRINGIFY(NODE_MAJOR_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_MINOR_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_PATCH_VERSION) "." \
+                                 NODE_STRINGIFY(NODE_BUILD_VERSION)
+
 #ifndef NODE_EXE_VERSION
 # define NODE_EXE_VERSION NODE_VERSION_STRING
 #endif
 
+#ifndef NODE_RC_EXE_VERSION
+# define NODE_RC_EXE_VERSION NODE_RC_VERSION_STRING
+#endif
+
 #define NODE_VERSION "v" NODE_VERSION_STRING
 
 
diff --git a/src/src/res/node.rc b/src/src/res/node.rc
index 9403e68be70..d9f1f8b912f 100644
--- a/src/src/res/node.rc
+++ b/src/src/res/node.rc
@@ -29,8 +29,8 @@
 
 // Version resource
 VS_VERSION_INFO VERSIONINFO
- FILEVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,0
- PRODUCTVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,0
+ FILEVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,NODE_BUILD_VERSION
+ PRODUCTVERSION NODE_MAJOR_VERSION,NODE_MINOR_VERSION,NODE_PATCH_VERSION,NODE_BUILD_VERSION
  FILEFLAGSMASK 0x3fL
 #ifdef _DEBUG
  FILEFLAGS VS_FF_DEBUG
@@ -50,14 +50,14 @@ BEGIN
     BEGIN
         BLOCK "040904b0"
         BEGIN
-            VALUE "CompanyName", "Node.js"
-            VALUE "ProductName", "Node.js"
-            VALUE "FileDescription", "Node.js: Server-side JavaScript"
-            VALUE "FileVersion", NODE_EXE_VERSION
-            VALUE "ProductVersion", NODE_EXE_VERSION
-            VALUE "OriginalFilename", "node.exe"
-            VALUE "InternalName", "node"
-            VALUE "LegalCopyright", "Copyright Node.js contributors. MIT license."
+            VALUE "CompanyName", "BIS"
+            VALUE "ProductName", "jscript (from Node.js)"
+            VALUE "FileDescription", "jscript: Server-side JavaScript (from Node.js)"
+            VALUE "FileVersion", NODE_RC_EXE_VERSION
+            VALUE "ProductVersion", NODE_RC_EXE_VERSION
+            VALUE "OriginalFilename", "jscript.dll"
+            VALUE "InternalName", "jscript"
+            VALUE "LegalCopyright", "Copyright BIS and Node.js contributors. MIT license."
         END
     END
     BLOCK "VarFileInfo"
